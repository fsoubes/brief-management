{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  checkoutState: \"LOADING\",\n  errorMessage: \"\"\n};\nexport const getProducts = createAsyncThunk(\"products/get\", async () => {\n  const products = await fetch(\"http://localhost:4000/products\");\n  console.log(await products);\n  return await products.json();\n});\nconst productsSlice = createSlice({\n  initialState,\n  name: \"products\",\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, state => {\n      state.checkoutState = \"LOADING\";\n    });\n    builder.addCase(getProducts.fulfilled, (state, action) => {\n      state.checkoutState = \"READY\";\n      state.products = action.payload;\n    });\n    builder.addCase(getProducts.rejected, (state, action) => {\n      state.checkoutState = \"ERROR\";\n      state.errorMessage = action.error.message || \"\";\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"sources":["/home/franck/brief-management/brief-management-client/src/features/products/productsSlice.ts"],"names":["createAsyncThunk","createSlice","initialState","products","checkoutState","errorMessage","getProducts","fetch","console","log","json","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","error","message","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAcA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,QAAQ,EAAE,EADwB;AAElCC,EAAAA,aAAa,EAAE,SAFmB;AAGlCC,EAAAA,YAAY,EAAE;AAHoB,CAApC;AAMA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,cAAD,EAAiB,YAAY;AACtE,QAAMG,QAAQ,GAAG,MAAMI,KAAK,CAAC,gCAAD,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAMN,QAAlB;AACA,SAAQ,MAAMA,QAAQ,CAACO,IAAT,EAAd;AACD,CAJ0C,CAApC;AAMP,MAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCC,EAAAA,YADgC;AAEhCU,EAAAA,IAAI,EAAE,UAF0B;AAGhCC,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBV,WAAW,CAACW,OAA5B,EAAsCC,KAAD,IAAW;AAC9CA,MAAAA,KAAK,CAACd,aAAN,GAAsB,SAAtB;AACD,KAFD;AAGAW,IAAAA,OAAO,CAACC,OAAR,CAAgBV,WAAW,CAACa,SAA5B,EAAuC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACxDF,MAAAA,KAAK,CAACd,aAAN,GAAsB,OAAtB;AACAc,MAAAA,KAAK,CAACf,QAAN,GAAiBiB,MAAM,CAACC,OAAxB;AACD,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBV,WAAW,CAACgB,QAA5B,EAAsC,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACvDF,MAAAA,KAAK,CAACd,aAAN,GAAsB,OAAtB;AACAc,MAAAA,KAAK,CAACb,YAAN,GAAqBe,MAAM,CAACG,KAAP,CAAaC,OAAb,IAAwB,EAA7C;AACD,KAHD;AAID;AAhB+B,CAAD,CAAjC;AAmBA,eAAeb,aAAa,CAACc,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { CheckoutState } from \"../../shared/api/constant\";\n\nexport interface Products {\n  id: number;\n  name: string;\n}\n\nexport interface ProductsState {\n  products: Products[];\n  checkoutState: CheckoutState;\n  errorMessage: string;\n}\n\nconst initialState: ProductsState = {\n  products: [],\n  checkoutState: \"LOADING\",\n  errorMessage: \"\",\n};\n\nexport const getProducts = createAsyncThunk(\"products/get\", async () => {\n  const products = await fetch(\"http://localhost:4000/products\");\n  console.log(await products);\n  return (await products.json()) as Products[];\n});\n\nconst productsSlice = createSlice({\n  initialState,\n  name: \"products\",\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getProducts.pending, (state) => {\n      state.checkoutState = \"LOADING\";\n    });\n    builder.addCase(getProducts.fulfilled, (state, action) => {\n      state.checkoutState = \"READY\";\n      state.products = action.payload;\n    });\n    builder.addCase(getProducts.rejected, (state, action) => {\n      state.checkoutState = \"ERROR\";\n      state.errorMessage = action.error.message || \"\";\n    });\n  },\n});\n\nexport default productsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}