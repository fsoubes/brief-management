{"ast":null,"code":"var _jsxFileName = \"/home/franck/brief-management/brief-management-client/src/features/form/components/BriefForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./brieform.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../../shared/hooks\";\nimport { addBrief } from \"../../briefs/briefsSlice\";\nimport { getProducts } from \"../../products/productsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BriefForm = _ref => {\n  _s();\n\n  let {} = _ref;\n  const dispatch = useAppDispatch();\n  const [id, setId] = useState(5);\n  const [productsName, setProductsName] = useState(null);\n  const {\n    products\n  } = useAppSelector(state => state.products);\n  const briefs = useAppSelector(state => state.briefs);\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n  useEffect(() => {\n    setId(briefs.nodes.length);\n  }, [briefs.nodes.length]);\n  useEffect(() => {\n    if (products && products.length > 0) setProductsName(products.map(item => item.name));\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    bgcolor: \"#f6f8fa\",\n    width: \"600px\",\n    padding: \"20px\",\n    border: \"1px solid #eaecef\",\n    borderRadius: \"5px\",\n    marginTop: 5,\n    marginBottom: 5,\n    marginRight: 2,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Send your brief\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: \"\",\n        comment: \"\",\n        product: \"\"\n      },\n      onSubmit: async (_ref2, _ref3) => {\n        let {\n          title,\n          comment,\n          product\n        } = _ref2;\n        let {\n          setErrors,\n          resetForm\n        } = _ref3;\n\n        try {\n          if (!title) {\n            setErrors({\n              title: \"you can't send this empty!\"\n            });\n          } else if (!comment) {\n            setErrors({\n              comment: \"you can't send this empty!\"\n            });\n          } else {\n            console.log(product);\n            dispatch(addBrief({\n              id: id + 1,\n              title: title,\n              comment: comment,\n              productId: product ? parseInt(product) + 1 : 1\n            }));\n            resetForm();\n          }\n        } catch (err) {\n          throw err;\n        }\n      },\n      children: _ref4 => {\n        let {\n          isSubmitting,\n          errors\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            marginBottom: 2,\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form__label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"title\",\n              autoCapitalize: \"none\",\n              autoCorrect: \"off\",\n              className: \"form__input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"title\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            marginBottom: 2,\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              className: \"form__input\",\n              name: \"comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), errors.comment && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"comment\",\n              children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            marginBottom: 2,\n            marginTop: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form__label\",\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              name: \"product\",\n              className: \"form__select \",\n              children: productsName && productsName.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                children: productsName[index]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BriefForm, \"EtrB1wUQNRlBkZQs4eiE1pL3SAM=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = BriefForm;\nexport default BriefForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BriefForm\");","map":{"version":3,"sources":["/home/franck/brief-management/brief-management-client/src/features/form/components/BriefForm.tsx"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Box","Button","useAppDispatch","useAppSelector","addBrief","getProducts","BriefForm","dispatch","id","setId","productsName","setProductsName","products","state","briefs","nodes","length","map","item","name","title","comment","product","setErrors","resetForm","console","log","productId","parseInt","err","isSubmitting","errors","msg","color","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./brieform.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../../shared/hooks\";\nimport { addBrief } from \"../../briefs/briefsSlice\";\nimport { getProducts } from \"../../products/productsSlice\";\n\ninterface BriefFormProps {}\n\nconst BriefForm: React.FC<BriefFormProps> = ({}) => {\n  const dispatch = useAppDispatch();\n  const [id, setId] = useState<number | null>(5);\n  const [productsName, setProductsName] = useState<string[] | null>(null);\n  const { products } = useAppSelector((state) => state.products);\n  const briefs = useAppSelector((state) => state.briefs);\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setId(briefs.nodes.length);\n  }, [briefs.nodes.length]);\n\n  useEffect(() => {\n    if (products && products.length > 0)\n      setProductsName(products.map((item) => item.name));\n  }, [products]);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"stretch\"\n      bgcolor={\"#f6f8fa\"}\n      width={\"600px\"}\n      padding={\"20px\"}\n      border={\"1px solid #eaecef\"}\n      borderRadius={\"5px\"}\n      marginTop={5}\n      marginBottom={5}\n      marginRight={2}\n    >\n      <div className=\"form__header\">\n        <h1>Send your brief</h1>\n      </div>\n      <Formik\n        initialValues={{\n          title: \"\",\n          comment: \"\",\n          product: \"\",\n        }}\n        onSubmit={async (\n          { title, comment, product },\n          { setErrors, resetForm }\n        ) => {\n          try {\n            if (!title) {\n              setErrors({ title: \"you can't send this empty!\" });\n            } else if (!comment) {\n              setErrors({ comment: \"you can't send this empty!\" });\n            } else {\n              console.log(product);\n\n              dispatch(\n                addBrief({\n                  id: (id as number) + 1,\n                  title: title,\n                  comment: comment,\n                  productId: product ? parseInt(product) + 1 : 1,\n                })\n              );\n              resetForm();\n            }\n          } catch (err) {\n            throw err;\n          }\n        }}\n      >\n        {({ isSubmitting, errors }) => (\n          <Form>\n            <Box\n              marginBottom={2}\n              marginTop={2}\n              display=\"flex\"\n              flexDirection=\"column\"\n            >\n              <label className=\"form__label\">Title</label>\n              <Field\n                type=\"text\"\n                name=\"title\"\n                autoCapitalize=\"none\"\n                autoCorrect=\"off\"\n                className=\"form__input\"\n              ></Field>\n              {errors.title && (\n                <ErrorMessage name=\"title\">\n                  {(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\n                </ErrorMessage>\n              )}\n            </Box>\n            <Box\n              marginBottom={2}\n              marginTop={2}\n              display=\"flex\"\n              flexDirection=\"column\"\n            >\n              <label className=\"form_label\">Comment</label>\n\n              <Field type=\"text\" className=\"form__input\" name=\"comment\"></Field>\n              {errors.comment && (\n                <ErrorMessage name=\"comment\">\n                  {(msg) => <div style={{ color: \"red\" }}>{msg}</div>}\n                </ErrorMessage>\n              )}\n            </Box>\n            <Box\n              marginBottom={2}\n              marginTop={2}\n              display=\"flex\"\n              flexDirection=\"column\"\n            >\n              <label className=\"form__label\">Products</label>\n              <Field as=\"select\" name=\"product\" className=\"form__select \">\n                {productsName &&\n                  productsName.map((item: string, index: number) => (\n                    <option value={index} key={index}>\n                      {productsName[index]}\n                    </option>\n                  ))}\n              </Field>\n            </Box>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isSubmitting}\n            >\n              Send\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\nexport default BriefForm;\n"]},"metadata":{},"sourceType":"module"}